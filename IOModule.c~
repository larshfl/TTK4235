#include "IOModule.h"

void pollFloorsAndSetLights(int *currentFloor){

	switch(elev_get_floor_sensor_signal()){
	
		case -1:
			break;
		case 0:
			*currentFloor = 0;
			elev_set_floor_indicator(0);
			break;
		case 1:
			*currentFloor = 1;
			elev_set_floor_indicator(1);
			break;
		case 2:
			*currentFloor = 2;
			elev_set_floor_indicator(2);
			break;
		case 3:
			*currentFloor = 3;
			elev_set_floor_indicator(3);
			break;
		default:
			printf("FLOOR SENSOR BROKEN\n");
	}
};

void pollAndUpdateButtonsAndLights(){

		
		//UP BUTTONS
		BUTTONS[0] = (BUTTONS[0] || elev_get_button_signal(0, 0));
		BUTTONS[1] = (BUTTONS[1] || elev_get_button_signal(0, 1));
		BUTTONS[2] = (BUTTONS[2] || elev_get_button_signal(0, 2));
		BUTTONS[3] = 0; //NO UP ON 3RD FLOOR
		
		//DOWN BUTTONS
		BUTTONS[4] = 0; //NO DOWN ON GROUND FLOOR
		BUTTONS[5] = (BUTTONS[5] || elev_get_button_signal(1, 1));
		BUTTONS[6] = (BUTTONS[6] || elev_get_button_signal(1, 2));
		BUTTONS[7] = (BUTTONS[7] || elev_get_button_signal(1, 3));

		
		//COMMAND BUTTONS
		BUTTONS[8] = (BUTTONS[8] || elev_get_button_signal(2, 0));
		BUTTONS[9] = (BUTTONS[9] || elev_get_button_signal(2, 1));
		BUTTONS[10] = (BUTTONS[10] || elev_get_button_signal(2, 2));
		BUTTONS[11] = (BUTTONS[11] || elev_get_button_signal(2, 3));
		
	
		
		//SET LIGHTS
		if (elev_get_stop_signal()){
			elev_set_button_lamp(BUTTON_CALL_UP, 0, 0);
			elev_set_button_lamp(BUTTON_CALL_UP, 1, 0);
			elev_set_button_lamp(BUTTON_CALL_UP, 2, 0);

		
			elev_set_button_lamp(BUTTON_CALL_DOWN, 1, 0);
			elev_set_button_lamp(BUTTON_CALL_DOWN, 2, 0);
			elev_set_button_lamp(BUTTON_CALL_DOWN, 3, 0);

			elev_set_button_lamp(BUTTON_COMMAND, 0, 0);
			elev_set_button_lamp(BUTTON_COMMAND, 1, 0);
			elev_set_button_lamp(BUTTON_COMMAND, 2, 0);
			elev_set_button_lamp(BUTTON_COMMAND, 3, 0);
			elev_set_stop_lamp(1);
		}
		else{
			elev_set_button_lamp(BUTTON_CALL_UP, 0, BUTTONS[0]);
			elev_set_button_lamp(BUTTON_CALL_UP, 1, BUTTONS[1]);
			elev_set_button_lamp(BUTTON_CALL_UP, 2, BUTTONS[2]);

		
			elev_set_button_lamp(BUTTON_CALL_DOWN, 1, BUTTONS[5]);
			elev_set_button_lamp(BUTTON_CALL_DOWN, 2, BUTTONS[6]);
			elev_set_button_lamp(BUTTON_CALL_DOWN, 3, BUTTONS[7]);

			elev_set_button_lamp(BUTTON_COMMAND, 0, BUTTONS[8]);
			elev_set_button_lamp(BUTTON_COMMAND, 1, BUTTONS[9]);
			elev_set_button_lamp(BUTTON_COMMAND, 2, BUTTONS[10]);
			elev_set_button_lamp(BUTTON_COMMAND, 3, BUTTONS[11]);

			elev_set_stop_lamp(0);
		}
		
		
		
};

void setMotorDirection(int *currentFloor, struct order *currentOrder){
	
/*
if (*currentFloor > currentOrder->floor){
		direction = 1;
		elev_set_motor_direction(DIRN_DOWN);
	}
	else if (*currentFloor < currentOrder->floor){
		direction = 0;
		elev_set_motor_direction(DIRN_UP);
	}
	else if ((elev_get_floor_sensor_signal() == -1) && (*currentFloor == currentOrder->floor)){
		if (direction == 1){
			elev_set_motor_direction(DIRN_UP);
			direction = 0;
		}
		else if (direction == 0){
			elev_set_motor_direction(DIRN_DOWN);
			direction = 1;
		}
	}
	else{
		elev_set_motor_direction(DIRN_STOP);
	}

*/




	if(elev_get_floor_sensor_signal() != -1){
        if(*currentFloor < currentOrder->floor){
            elev_set_motor_direction(DIRN_UP);
            direction = 0;
        }
        else if(*currentFloor > currentOrder->floor){
            elev_set_motor_direction(DIRN_DOWN);
            direction = 1;
        }
        }
    else{
        if(currentOrder->floor > *currentFloor){
            printf("YOLO2");
            elev_set_motor_direction(DIRN_UP);
            direction = 0;
        }
        else if (currentOrder->floor < *currentFloor){
            printf("yolo\n");
            elev_set_motor_direction(DIRN_DOWN);
            direction = 1;
           }
        else{
           if (previousDir == 1){
                elev_set_motor_direction(DIRN_UP);
                direction = 0;
                }
           else{
                elev_set_motor_direction(DIRN_DOWN);
                direction = 1;
               }
        }
    }    

}

int getDirection(){
	return direction;
}
void setDirection(int dir){
	direction = dir;
}





